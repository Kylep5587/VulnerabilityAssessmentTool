#This script was created by Jason Vansickle
#This script is to pull the computer programs list and pass the informatin to an Access Database

#Database connection information
$dataSource = "../../VulnerabilityScannerData.accdb"
$dsn = "Provider=Microsoft.ACE.OLEDB.12.0; Data Source=$dataSource;Persist Security Info=False;"
$objConn = New-Object System.Data.OleDb.OleDbConnection $dsn
$objConn.Open()

#Variable for time the programs were scanned.
$ScanTime = Get-Date -format d;

#Creates a variable to hold all the applications.
$applications = Get-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*";


#a loop that looks at the application list and looks for the three programs Firefox and Java. Then picks them out and puts that information into an Access Database.
foreach ($application in $applications | Select-Object -Property DisplayName,DisplayVersion,InstallDate | Where-Object {($_.DisplayName -Like "*Java* *Update*") -or ($_.DisplayName -Like "*Firefox*")})
{
#Create the Varibles for each part of the database
	$DisplayName = $Application.DisplayName
	$DisplayVersion = $Application.DisplayVersion
	$InstallDate = $Application.InstallDate
    #Change the data string into a Datetime
    $InstallDate = [datetime]::ParseExact($InstallDate, 'yyyyMMdd', $null)
    #Create the command to enter into the database.    
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ApplicationName,VersionNumber,InstallDate,ScanDate) VALUES (?,?,?,?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.AddwithValue("@ApplicationName",$DisplayName);
    $objCmd.Parameters.AddwithValue("@VersionNumber",$DisplayVersion);
    #Create an if loop to change the date to null if not install date is found.
    $objCmd.Parameters.Add("@InstallDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
        if ($InstallDate -eq $null)
        {
        $objCmd.Parameters["@InstallDate"].Value = [System.DBnull]::Value;
        }
	    else
        {
        $objCmd.Parameters["@InstallDate"].Value = $InstallDate;
        }
    #Remove # when if we add scan time to the database.
    $objCmd.Parameters.AddwithValue("@ScanTime",$ScanTime);
    $objCmd.ExecuteNonQuery()

    }
#Close the connection
$objConn.Close()

#Open another connection to the Databsae
$objConn.Open()

#Scan the Win32 Products for Google Chrome
$Google = Get-WmiObject -Class Win32_Product | Select-Object -Property Name,Version | Where-Object {$_.Name -Match "Google Chrome"}

#If statement to add the Google info if it is found on the Computer
if($Google -NE $null){
#Create the Varibles for each part of the database
	$DisplayName = $Google.Name
	$DisplayVersion = $Google.Version
    #Create the command to enter into the database.
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ApplicationName,VersionNumber,InstallDate,ScanDate) VALUES (?,?,?,?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.AddwithValue("@ApplicationName",$DisplayName);
    $objCmd.Parameters.AddwithValue("@VersionNumber",$DisplayVersion);
    $objCmd.Parameters.Add("@InstallDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
    $objCmd.Parameters["@InstallDate"].Value = [System.DBnull]::Value;
    $objCmd.Parameters.AddwithValue("@ScanTime",$ScanTime);
    $objCmd.ExecuteNonQuery()
}
Else
{

}
#Close the connection
$objConn.Close()