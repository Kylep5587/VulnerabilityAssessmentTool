#This script was created by Jason Vansickle
#This script is to pull the computer programs list and pass the informatin to an Access Database

#Database connection information
$dataSource = "C:\Users\vansickj\Desktop\Jason\VulnerabilityScannerDataV2.accdb"
$dsn = "Provider=Microsoft.ACE.OLEDB.12.0; Data Source=$dataSource;Persist Security Info=False;"
$objConn = New-Object System.Data.OleDb.OleDbConnection $dsn
$objConn.Open()

#Variable for time the programs were scanned.
$ScanTime = Get-Date -format d;

    #Scan for VLC media player
$VLC = (Get-Item (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\vlc.exe').'(Default)').VersionInfo | Select -ExpandProperty FileVersion

#If statement to add the VLC info if it is found on the Computer
if($VLC -NE $null){
    #Create the Varibles for each part of the database
	$DisplayName = "videolan/vlc_media_player"
	$DisplayVersion = $VLC

    #API Info
    $VendorName = $DisplayName -match "^\S*"
    $ActualVendorName = $Matches[0]
    $URI = "https://cve.circl.lu/api/search/$ActualVendorName"
    $CVEData = Invoke-WebRequest -Uri $URI | select-Object -Expand content
    $FormattedCVEData = ConvertFrom-Json -InputObject $CVEData
    $FormattedCVEData.data.vulnerable_configuration
    $VulnerableVersions = $FormattedCVEData | Select -ExpandProperty vulnerable_configuration
    
    #If statement to check if the actualy version matches any vulnerable versions
    If ([bool]($VulnerableVersions -match $DisplayVersion))
    {
    #Create the command to enter into the database.    
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ApplicationName,VersionNumber,InstallDate,ScanDate) VALUES (?,?,?,?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.AddwithValue("@ApplicationName",$DisplayName);
    $objCmd.Parameters.AddwithValue("@VersionNumber",$DisplayVersion);
    #Create an if loop to change the date to null if not install date is found.
    $objCmd.Parameters.Add("@InstallDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
        if ($InstallDate -eq $null)
        {
        $objCmd.Parameters["@InstallDate"].Value = [System.DBnull]::Value;
        }
	    else
        {
        $objCmd.Parameters["@InstallDate"].Value = $InstallDate;
        }
    $objCmd.Parameters.AddwithValue("@ScanTime",$ScanTime);
    $objCmd.ExecuteNonQuery()

    }
    Else
    {
    #Create the command to enter into the database.    
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ScanDate) VALUES (?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.Add("@ScanDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
    $objCmd.Parameters["@ScanDate"].Value = [System.DBnull]::Value;
    $objCmd.ExecuteNonQuery()
    }
    }
    
       #Scan for Firefox media player
$Firefox = (Get-Item (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\firefox.exe').'(Default)').VersionInfo | Select -ExpandProperty FileVersion

    #If statement to add the Firefox info if it is found on the Computer
if($Firefox -NE $null){
    #Create the Varibles for each part of the database
	$DisplayName = "mozilla/firefox"
	$DisplayVersion = $Firefox

    #API Info
    $VendorName = $DisplayName -match "^\S*"
    $ActualVendorName = $Matches[0]
    $URI = "https://cve.circl.lu/api/search/$ActualVendorName"
    $CVEData = Invoke-WebRequest -Uri $URI | select-Object -Expand content
    $FormattedCVEData = ConvertFrom-Json -InputObject $CVEData
    $FormattedCVEData.data.vulnerable_configuration
    $VulnerableVersions = $FormattedCVEData | Select -ExpandProperty vulnerable_configuration
    
    #If statement to check if the actualy version matches any vulnerable versions
    If ([bool]($VulnerableVersions -match $DisplayVersion))
    {
    #Create the command to enter into the database.    
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ApplicationName,VersionNumber,InstallDate,ScanDate) VALUES (?,?,?,?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.AddwithValue("@ApplicationName",$DisplayName);
    $objCmd.Parameters.AddwithValue("@VersionNumber",$DisplayVersion);
    #Create an if loop to change the date to null if not install date is found.
    $objCmd.Parameters.Add("@InstallDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
        if ($InstallDate -eq $null)
        {
        $objCmd.Parameters["@InstallDate"].Value = [System.DBnull]::Value;
        }
	    else
        {
        $objCmd.Parameters["@InstallDate"].Value = $InstallDate;
        }
    $objCmd.Parameters.AddwithValue("@ScanTime",$ScanTime);
    $objCmd.ExecuteNonQuery()

    }
    Else
    {
    #Create the command to enter into the database.    
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ScanDate) VALUES (?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.Add("@ScanDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
    $objCmd.Parameters["@ScanDate"].Value = [System.DBnull]::Value;
    $objCmd.ExecuteNonQuery()
    }
    }  
     #Scan for Chrome media player
$Chrome = (Get-Item (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\chrome.exe').'(Default)').VersionInfo | Select -ExpandProperty FileVersion

    #If statement to add the Chrome info if it is found on the Computer
if($Chrome -NE $null){
    #Create the Varibles for each part of the database
	$DisplayName = "google/chrome"
	$DisplayVersion = $Chrome

    #API Info
    $VendorName = $DisplayName -match "^\S*"
    $ActualVendorName = $Matches[0]
    $URI = "https://cve.circl.lu/api/search/$ActualVendorName"
    $CVEData = Invoke-WebRequest -Uri $URI | select-Object -Expand content
    $FormattedCVEData = ConvertFrom-Json -InputObject $CVEData
    $FormattedCVEData.data.vulnerable_configuration
    $VulnerableVersions = $FormattedCVEData | Select -ExpandProperty vulnerable_configuration
    
    #If statement to check if the actualy version matches any vulnerable versions
    If ([bool]($VulnerableVersions -match $DisplayVersion))
    {
    #Create the command to enter into the database.    
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ApplicationName,VersionNumber,InstallDate,ScanDate) VALUES (?,?,?,?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.AddwithValue("@ApplicationName",$DisplayName);
    $objCmd.Parameters.AddwithValue("@VersionNumber",$DisplayVersion);
    #Create an if loop to change the date to null if not install date is found.
    $objCmd.Parameters.Add("@InstallDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
        if ($InstallDate -eq $null)
        {
        $objCmd.Parameters["@InstallDate"].Value = [System.DBnull]::Value;
        }
	    else
        {
        $objCmd.Parameters["@InstallDate"].Value = $InstallDate;
        }
    $objCmd.Parameters.AddwithValue("@ScanTime",$ScanTime);
    $objCmd.ExecuteNonQuery()

    }
    Else
    {
    #Create the command to enter into the database.    
    $objCmd = $objConn.CreateCommand()
	$objCmd.CommandText = "INSERT INTO ApplicationList (ScanDate) VALUES (?)"
    #Create the parameteres for the Insert statement
    $objCmd.Parameters.Add("@ScanDate", [System.Data.OleDb.OleDbType]::DBdate, 225)
    $objCmd.Parameters["@ScanDate"].Value = [System.DBnull]::Value;
    $objCmd.ExecuteNonQuery()
    }
    }
    $objConn.Close()
