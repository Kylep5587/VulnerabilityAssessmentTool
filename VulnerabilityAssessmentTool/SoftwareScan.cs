/*****************************************
 * VAT - CIS470 Senior Project           *
 * SoftwareScan.cs                       *
 * Provides vulnerability news related   *
 *   to software installed on the system *
 *  *************************************/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Management.Automation; // Required for PowerShell
using System.IO;                    // Required for working with files

namespace VulnerabilityAssessmentTool
{
    public partial class SoftwareScan : Form
    {
        public SoftwareScan()
        {
            InitializeComponent();
        }

        /* Executes system software scan
         **************************************/
        private void btnScan_Click(object sender, EventArgs e)
        {
            bwSoftwareScan.RunWorkerAsync();    // Executes background worker
            lblScanCompletion.Visible = false;  // Ensure "Scan Complete!" is hidden
            pbScanStatus.Visible = true;        // Make progress bar visible
            lblScanPercentage.Visible = true;   // Make prcentage counter visible
            btnScan.Enabled = false;            // Disable scan button while scan active
        }

        /* Performs software scan and creates CSV
         **************************************/
         private void scanSoftware()
        {
            var script = "";    // PowerShell script to scan files
            var powerShell = PowerShell.Create().AddScript(script); // Exeutes PowerShell script
        }

        /* Check vulnerabilities
         **************************************/
         private void checkVulnerabilities()
        {
            int lineCount = 0;

            // Loops through CSV and counts the number of lines
            using (var reader = File.OpenText(@Globals.softwareCSVfile))
            {
                while (reader.ReadLine() != null)
                    lineCount++;
            }
        }

        /* TEMPORARY - Used to simulate the software scaning task
         **************************************/
        private void simulateScan()
        {
            System.Threading.Thread.Sleep(100);
        }

        /* Executes a task using backgorund worker
         **************************************/
        private void bwSoftwareScan_DoWork(object sender, DoWorkEventArgs e)
        {
            Application.UseWaitCursor = true;   // Sets cursor to wait cursor
            for (int i=0; i<=100; i++)
            {
                if (bwSoftwareScan.CancellationPending) // Checks for cancel clicked
                    e.Cancel = true;
                else
                {
                    simulateScan();
                    bwSoftwareScan.ReportProgress(i);
                }
            }
        }

        /* Updates progress bar
         **************************************/
        private void bwSoftwareScan_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            pbScanStatus.Value = e.ProgressPercentage;                          // Updates progress bar
            lblScanPercentage.Text = e.ProgressPercentage.ToString() + " %";    // Updates text percentage next to progress bar
        }

        /* Executes when background task is complete
         **************************************/
        private void bwSoftwareScan_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            Application.UseWaitCursor = false;  // Returns cursor to default
            btnScan.Enabled = true;             // Enable scan button
            if (e.Cancelled)                    // Scan cancelled
            {
                lblScanCompletion.ForeColor = Color.Red;
                lblScanCompletion.Text = "Scan cancelled";
                lblScanCompletion.Visible = true;
                pbScanStatus.Value = 0;
                lblScanPercentage.Text = "0%";
            }

            else
            {
                lblScanCompletion.ForeColor = Color.Black;
                lblScanCompletion.Text = "Scan complete!";
                lblScanCompletion.Visible = true;
            }
        }
    }
}
