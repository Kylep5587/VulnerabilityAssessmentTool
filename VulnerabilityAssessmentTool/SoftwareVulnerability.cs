/*****************************************
 * VAT - CIS470 Senior Project           *
 * SoftwareVulnerability.cs              *
 * Provides vulnerability template and   *
 *  methods for accessing info           *
 *  *************************************/

using System;
using System.Collections.Generic;
using System.Data.OleDb;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VulnerabilityAssessmentTool
{
    class SoftwareVulnerability
    {
        private DatabaseHelper db = new DatabaseHelper();   // Allows access to methods in DatabaseHelper class - use db.MethodName()

        // Members
        private int id;
        private string applicationName;
        private string versionNumber;
        private DateTime installDate;
        private DateTime scanDate;


        // Getters and setters
        public int Id { get => id; set => id = value; }
        public string ApplicationName { get => applicationName; set => applicationName = value; }
        public string VersionNumber { get => versionNumber; set => versionNumber = value; }
        public DateTime InstallDate { get => installDate; set => installDate = value; }
        public DateTime ScanDate { get => scanDate; set => scanDate = value; }


        /* Gets the current software vulnerabilities stored in the database
         * ********************************************/
        public List<SoftwareVulnerability> GetVulnerabilityList()
        {
            List<SoftwareVulnerability> vulnerabilityList = new List<SoftwareVulnerability>();    // Stores each vulnerability object pulled from database
            string query = "SELECT * FROM ApplicationList";
            OleDbCommand cmd = new OleDbCommand(query, db.conn);
            OleDbDataReader dr = cmd.ExecuteReader();

            while (dr.Read())   // Loop through results
            {
                SoftwareVulnerability vulnerability = new SoftwareVulnerability
                {
                    // Assign data to object variables
                    Id = Convert.ToInt16(dr["ID"]),
                    ApplicationName = dr["ApplicationName"].ToString(),
                    VersionNumber = dr["VersionNumber"].ToString(),
                    InstallDate = Convert.ToDateTime(dr["InstallDate"]),
                    ScanDate = Convert.ToDateTime(dr["ScanDate"])
                };  

                vulnerabilityList.Add(vulnerability);                               // Add vulnerability object to list
            }

            return vulnerabilityList;
        }

    } // End SoftwareVulnerability class
} // End namespace
