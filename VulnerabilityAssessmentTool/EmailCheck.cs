/*****************************************
 * VAT - CIS470 Senior Project           *
 * EmailCheck.cs                         *
 * Uses haveibeenpwned.com to check      *
 *   email account for breaches          *
 *  *************************************/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net.Mail;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace VulnerabilityAssessmentTool
{
    public partial class EmailCheck : Form
    {
        public EmailCheck()
        {
            InitializeComponent();
        }

        /* Displays most recent search results from database
         **************************************/
        private void EmailCheck_Load(object sender, EventArgs e)
        {
            // Open database
            // If data present, display it
        }

        /* Checks email against haveibeenpwned.com database
         **************************************/
        private void btnCheckEmail_Click(object sender, EventArgs e)
        {
            bool isValidEmail = false;

            // Validate email format
            try
            {
                MailAddress m = new MailAddress(txtEmailAddress.Text.ToString());
                isValidEmail = true;
            }
            catch (Exception)
            {
                isValidEmail = false;
                MessageBox.Show("Please enter a valid email address.", "Invalid Input", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }

            if (isValidEmail)
            {
                Application.UseWaitCursor = true;   // Set cursor to wait cursor

                // Add email address to parameters
                List<string> scriptParams = new List<string>();
                scriptParams.Add(txtEmailAddress.Text.ToString());

                List<string> breachResults = Globals.runPowerShellScript(Globals.PWNED_SCRIPT, scriptParams); // Execute powershell script and store results in list

                string results = "";
                foreach (string breach in breachResults)
                {
                    results += breach + "\n";
                }
                MessageBox.Show(results, "Breach Results");
                Application.UseWaitCursor = false;  // Return to normal cursor
            }
        }
        
    }
}
