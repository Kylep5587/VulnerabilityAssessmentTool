#Database connection information
$dataSource = "C:\VulnerabilityScannerDataV2.accdb"
$dsn = "Provider=Microsoft.ACE.OLEDB.12.0; Data Source=$dataSource;Persist Security Info=False;"
$objConn = New-Object System.Data.OleDb.OleDbConnection $dsn
$objConn.Open()

#Variable for time the programs were scanned.
$ScanTime = Get-Date -format d;

#IP information
$portrange = 1..150
$timeout_ms = 5
$IP=[System.net.dns]::GetHostEntry($env:COMPUTERNAME).AddressList | %{$_.IPAddressToString}


foreach ($IPAddress in $IP){
if (Test-Connection -BufferSize 32 -Count 1 -Quiet -ComputerName $IPaddress)
{
Write-Output "$IPaddress is scanning ports now."
foreach ($port in $portrange)
       {
           $ErrorActionPreference = 'SilentlyContinue'
           $socket = new-object System.Net.Sockets.TcpClient
           $connect = $socket.BeginConnect($ipaddress, $port, $null, $null)
           $tryconnect = Measure-Command { $success = $connect.AsyncWaitHandle.WaitOne($timeout_ms, $true) } | % totalmilliseconds
           $tryconnect | Out-Null

                   if ($socket.Connected)
                   {
                       $socket.Close()
                       $socket.Dispose()
                       $socket = $null

                       #Create the command to enter into the database.
                       $objCmd = $objConn.CreateCommand()
                       $objCmd.CommandText = "INSERT INTO PortScanResults (PortNumber,Protocol,Description,ScanDate) VALUES (?,?,?,?)"
                       #Create the parameteres for the Insert statement
                       $objCmd.Parameters.AddwithValue("@PortNumber",$port);
                       $objCmd.Parameters.AddwithValue("@Protocol","Hello");
                       $objCmd.Parameters.AddwithValue("@Description","Open");
                       $objCmd.Parameters.AddwithValue("@ScanDate",$ScanTime);
                       $objCmd.ExecuteNonQuery();
                   }
                                       Else
                   {
                   }

                   $ErrorActionPreference = 'Continue'
           }
}
}
$objConn.Close();
